/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'
import {
  ReassignStakeEntryIx,
  reassignStakeEntryIxBeet,
} from '../types/ReassignStakeEntryIx'

/**
 * @category Instructions
 * @category ReasssignStakeEntry
 * @category generated
 */
export type ReasssignStakeEntryInstructionArgs = {
  ix: ReassignStakeEntryIx
}
/**
 * @category Instructions
 * @category ReasssignStakeEntry
 * @category generated
 */
export const reasssignStakeEntryStruct = new beet.BeetArgsStruct<
  ReasssignStakeEntryInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['ix', reassignStakeEntryIxBeet],
  ],
  'ReasssignStakeEntryInstructionArgs'
)
/**
 * Accounts required by the _reasssignStakeEntry_ instruction
 *
 * @property [_writable_] stakePool
 * @property [_writable_] stakeEntry
 * @property [_writable_, **signer**] lastStaker
 * @category Instructions
 * @category ReasssignStakeEntry
 * @category generated
 */
export type ReasssignStakeEntryInstructionAccounts = {
  stakePool: web3.PublicKey
  stakeEntry: web3.PublicKey
  lastStaker: web3.PublicKey
}

export const reasssignStakeEntryInstructionDiscriminator = [
  40, 97, 18, 150, 188, 255, 13, 149,
]

/**
 * Creates a _ReasssignStakeEntry_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category ReasssignStakeEntry
 * @category generated
 */
export function createReasssignStakeEntryInstruction(
  accounts: ReasssignStakeEntryInstructionAccounts,
  args: ReasssignStakeEntryInstructionArgs,
  programId = new web3.PublicKey('rwcn6Ry17ChPXpJCN2hoK5kwpgFarQqzycXwVJ3om7U')
) {
  const [data] = reasssignStakeEntryStruct.serialize({
    instructionDiscriminator: reasssignStakeEntryInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.stakePool,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.stakeEntry,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.lastStaker,
      isWritable: true,
      isSigner: true,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
