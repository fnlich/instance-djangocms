/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'
import {
  UpdateReceiptManagerIx,
  updateReceiptManagerIxBeet,
} from '../types/UpdateReceiptManagerIx'

/**
 * @category Instructions
 * @category UpdateReceiptManager
 * @category generated
 */
export type UpdateReceiptManagerInstructionArgs = {
  ix: UpdateReceiptManagerIx
}
/**
 * @category Instructions
 * @category UpdateReceiptManager
 * @category generated
 */
export const updateReceiptManagerStruct = new beet.FixableBeetArgsStruct<
  UpdateReceiptManagerInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['ix', updateReceiptManagerIxBeet],
  ],
  'UpdateReceiptManagerInstructionArgs'
)
/**
 * Accounts required by the _updateReceiptManager_ instruction
 *
 * @property [_writable_] receiptManager
 * @property [**signer**] authority
 * @category Instructions
 * @category UpdateReceiptManager
 * @category generated
 */
export type UpdateReceiptManagerInstructionAccounts = {
  receiptManager: web3.PublicKey
  authority: web3.PublicKey
}

export const updateReceiptManagerInstructionDiscriminator = [
  18, 45, 212, 2, 210, 18, 61, 93,
]

/**
 * Creates a _UpdateReceiptManager_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category UpdateReceiptManager
 * @category generated
 */
export function createUpdateReceiptManagerInstruction(
  accounts: UpdateReceiptManagerInstructionAccounts,
  args: UpdateReceiptManagerInstructionArgs,
  programId = new web3.PublicKey('rrm26Uq1x1Rx8TwZaReKqUEu5fnNKufyANpgbon5otp')
) {
  const [data] = updateReceiptManagerStruct.serialize({
    instructionDiscriminator: updateReceiptManagerInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.receiptManager,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.authority,
      isWritable: false,
      isSigner: true,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
